local Camera = workspace.CurrentCamera
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local LocalPlayer = Players.LocalPlayer
local Holding = false
local Locked = false
local Victim
 
getgenv().AimbotEnabled = true
getgenv().TeamCheck = true -- If set to true then the script would only lock your aim at enemy team members.
getgenv().AimPart = "LowerTorso" -- Where the aimbot script would lock at.
getgenv().Sensitivity = 0.05 -- How many seconds it takes for the aimbot script to officially lock onto the target's aimpart.
 
getgenv().CircleSides = 3 -- How many sides the FOV circle would have.
getgenv().CircleColor = Color3.fromRGB(255, 255, 255) -- (RGB) Color that the FOV circle would appear as.
getgenv().CircleTransparency = 0.7 -- Transparency of the circle.
getgenv().CircleRadius = 250 -- The radius of the circle / FOV.
getgenv().CircleFilled = false -- Determines whether or not the circle is filled.
getgenv().CircleVisible = true -- Determines whether or not the circle is visible.
getgenv().CircleThickness = 2 -- The thickness of the circle.
 
local FOVCircle = Drawing.new("Circle")
FOVCircle.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
FOVCircle.Radius = getgenv().CircleRadius
FOVCircle.Filled = getgenv().CircleFilled
FOVCircle.Color = getgenv().CircleColor
FOVCircle.Visible = getgenv().CircleVisible
FOVCircle.Radius = getgenv().CircleRadius
FOVCircle.Transparency = getgenv().CircleTransparency
FOVCircle.NumSides = getgenv().CircleSides
FOVCircle.Thickness = getgenv().CircleThickness
 
local function GetClosestPlayer()
    local MaximumDistance = getgenv().CircleRadius
    local Target
 
    for _, v in pairs(game.Players:GetPlayers()) do
        if v.Name ~= LocalPlayer.Name then
            if getgenv().TeamCheck == true then 
                if v.Team ~= LocalPlayer.Team then
                    if workspace:FindFirstChild(v.Name) ~= nil then
                        if workspace[v.Name]:FindFirstChild("HumanoidRootPart") ~= nil then
                            if workspace[v.Name]:FindFirstChild("Humanoid") ~= nil and workspace[v.Name]:FindFirstChild("Humanoid").Health ~= 0 then
                                local ScreenPoint = Camera:WorldToScreenPoint(workspace[v.Name]:WaitForChild("HumanoidRootPart", math.huge).Position)
                                local VectorDistance = (Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y) - Vector2.new(ScreenPoint.X, ScreenPoint.Y)).Magnitude
                                
                                if VectorDistance < MaximumDistance then
                                    Target = v
                                end
                            end
                        end
                    end
                end
            else
                if workspace:FindFirstChild(v.Name) ~= nil then
                    if workspace[v.Name]:FindFirstChild("HumanoidRootPart") ~= nil then
                        if workspace[v.Name]:FindFirstChild("Humanoid") ~= nil and workspace[v.Name]:FindFirstChild("Humanoid").Health ~= 0 then
                            local ScreenPoint = Camera:WorldToScreenPoint(workspace[v.Name]:WaitForChild("HumanoidRootPart", math.huge).Position)
                            local VectorDistance = (Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y) - Vector2.new(ScreenPoint.X, ScreenPoint.Y)).Magnitude
                            
                            if VectorDistance < MaximumDistance then
                                Target = v
                            end
                        end
                    end
                end
            end
        end
    end
 
    return Target
end
 
UserInputService.InputBegan:Connect(function(Input)
    if Input.UserInputType == Enum.UserInputType.MouseButton2 then
        Holding = true
    end
end)
 
UserInputService.InputEnded:Connect(function(Input)
    if Input.UserInputType == Enum.UserInputType.MouseButton2 then
        Holding = false
        Locked = false
    end
end)
 
RunService.RenderStepped:Connect(function()
    FOVCircle.Position = Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y)
    FOVCircle.Radius = getgenv().CircleRadius
    FOVCircle.Filled = getgenv().CircleFilled
    FOVCircle.Color = getgenv().CircleColor
    FOVCircle.Visible = getgenv().CircleVisible
    FOVCircle.Radius = getgenv().CircleRadius
    FOVCircle.Transparency = getgenv().CircleTransparency
    FOVCircle.NumSides = getgenv().CircleSides
    FOVCircle.Thickness = getgenv().CircleThickness
    if Holding == true and getgenv().AimbotEnabled == true then
        TweenService:Create(Camera, TweenInfo.new(getgenv().Sensitivity, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {CFrame = CFrame.new(Camera.CFrame.Position, GetClosestPlayer().Character[getgenv().AimPart].Position)}):Play()
        Locked = true
    end
end)
